<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Manage your Beat.it profile and preferences">
    <title>Your Profile - Beat.it</title>
    <link rel="shortcut icon" type="image/x-icon" href="/assets/browserIcon.ico" />

    <!-- External stylesheet -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="stylesheet" href="/styles/font.css">
    <link rel="stylesheet" href="/styles/colors.css">
    <link rel="stylesheet" href="/styles/logo.css">
    <link rel="stylesheet" href="/styles/navbar.css">
    <link rel="stylesheet" href="/styles/player.css">
    <link rel="stylesheet" href="/styles/background.css">
    <link rel="stylesheet" href="/styles/song-album.css">
    <link rel="stylesheet" href="/styles/modern-theme.css">
    <link rel="stylesheet" href="/styles/profile.css">
    <link rel="stylesheet" href="/styles/profile-letter.css">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, var(--primary-dark), var(--primary));
            min-height: 100vh;
        }

        /* Add navbar profile menu styling */
        .top-nav {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            align-items: center;
            gap: 20px;
        }

        /* Profile styling is now in profile.css */

        .profile-container {
            display: flex;
            width: 90%;
            max-width: 1200px;
            margin: 30px auto 150px;
            border-radius: 24px;
            background-color: var(--card-bg);
            box-shadow: 0 12px 32px var(--shadow-color);
            overflow: hidden;
        }

        .profile-sidebar {
            width: 30%;
            padding: 40px;
            background: linear-gradient(180deg, var(--primary), var(--primary-dark));
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .profile-picture-container {
            position: relative;
            width: 200px;
            height: 200px;
            border-radius: 50%;
            margin-bottom: 30px;
            overflow: hidden;
            border: 4px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .profile-picture {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .change-photo {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 40px;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .profile-picture-container:hover .change-photo {
            opacity: 1;
        }

        .user-name {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
            text-align: center;
        }

        .user-email {
            font-size: 16px;
            font-weight: 400;
            opacity: 0.8;
            margin-bottom: 30px;
            text-align: center;
        }

        .sidebar-menu {
            width: 100%;
            margin-top: 20px;
        }

        .menu-item {
            padding: 12px 20px;
            border-radius: 12px;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .menu-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .menu-item.active {
            background-color: rgba(255, 255, 255, 0.2);
            font-weight: 600;
        }

        .menu-item i {
            margin-right: 12px;
            font-size: 18px;
            width: 24px;
            text-align: center;
        }

        .profile-content {
            flex: 1;
            padding: 40px;
            overflow-y: auto;
        }

        .content-section {
            display: none;
        }

        .content-section.active {
            display: block;
        }

        .section-title {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 24px;
            color: var(--text-primary);
        }

        .profile-form-group {
            margin-bottom: 24px;
        }

        .profile-form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-primary);
        }

        .profile-form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s;
        }

        .profile-form-input:focus {
            border-color: var(--primary);
            outline: none;
        }

        .form-row {
            display: flex;
            gap: 20px;
        }

        .form-row .profile-form-group {
            flex: 1;
        }

        .save-button {
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 12px;
        }

        .save-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(98, 0, 234, 0.3);
        }

        .success-message {
            color: #00a896;
            font-weight: 500;
            margin-top: 20px;
            display: none;
        }

        .error-message {
            color: #e74c3c;
            font-weight: 500;
            margin-top: 20px;
            display: none;
        }

        /* Favorite tracks section */
        .favorites-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .favorite-track {
            display: flex;
            align-items: center;
            padding: 15px;
            border-radius: 12px;
            background-color: #f5f5f7;
            transition: all 0.3s;
            cursor: pointer;
        }

        .favorite-track:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .track-cover {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            margin-right: 15px;
            object-fit: cover;
        }

        .track-info {
            flex: 1;
        }

        .track-title {
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--text-primary);
        }

        .track-artist {
            font-size: 14px;
            color: var(--text-secondary);
        }

        .track-actions {
            display: flex;
            align-items: center;
        }

        .track-actions i {
            font-size: 18px;
            color: var(--text-secondary);
            margin-left: 15px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .track-actions i:hover {
            color: var(--primary);
        }

        .logout-button {
            margin-top: auto;
            background-color: transparent;
            border: 2px solid rgba(255, 255, 255, 0.2);
            color: white;
            padding: 12px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
        }

        .logout-button i {
            margin-right: 8px;
        }

        .logout-button:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
                width: 95%;
            }

            .profile-sidebar {
                width: 100%;
                padding: 30px 20px;
            }

            .profile-picture-container {
                width: 120px;
                height: 120px;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }
        }

        #logo img {
            border-radius: 30px;
            box-shadow: 0 0 15px var(--shadow);
            cursor: pointer;
            transition: box-shadow 0.4s ease-in-out;
        }
        
        #logo img:hover {
            box-shadow: 0 0 30px var(--shadow);
        }
    </style>
</head>

<body>
    <script src="/scripts/utility/loading.js"></script>

    <%- include('partials/navbar.ejs') %>

    <main class="profile-container">
        <section class="profile-sidebar font-inter">
            <div class="profile-picture-container">
                <img src="<%= typeof profilePicture !== 'undefined' ? profilePicture : '/assets/profile/default-avatar.jpg' %>" alt="Profile Image" class="profile-picture" id="profile-avatar">
                <div class="change-photo">
                    <label for="photo-upload" style="cursor: pointer; color: white;">
                        <i class="fas fa-camera"></i> Change Photo
                    </label>
                    <input type="file" id="photo-upload" style="display: none;" accept="image/*">
                </div>
            </div>
            <h2 class="user-name"><%= username %></h2>
            <p class="user-email"><%= usermail %></p>

            <div class="sidebar-menu">
                <div class="menu-item active" data-section="personal-info">
                    <i class="fas fa-user"></i> Personal Information
                </div>
                <div class="menu-item" data-section="favorites">
                    <i class="fas fa-heart"></i> Favorite Tracks
                </div>
                <div class="menu-item" data-section="preferences">
                    <i class="fas fa-sliders-h"></i> Preferences
                </div>
            </div>

            <button class="logout-button" id="logout-btn">
                <i class="fas fa-sign-out-alt"></i> Logout
            </button>
        </section>

        <section class="profile-content font-inter">
            <!-- Personal Information Section -->
            <div class="content-section active" id="personal-info">
                <h3 class="section-title">Personal Information</h3>
                <form id="profile-form">
                    <div class="form-row">
                        <div class="profile-form-group">
                            <label class="profile-form-label" for="first-name">First Name</label>
                            <input type="text" id="first-name" class="profile-form-input" value="<%= username.split(' ')[0] %>">
                        </div>
                        <div class="profile-form-group">
                            <label class="profile-form-label" for="last-name">Last Name</label>
                            <input type="text" id="last-name" class="profile-form-input" value="<%= username.split(' ')[1] || '' %>">
                        </div>
                    </div>
                    <div class="profile-form-group">
                        <label class="profile-form-label" for="email">Email</label>
                        <input type="email" id="email" class="profile-form-input" value="<%= usermail %>" disabled>
                    </div>
                    <div class="profile-form-group">
                        <label class="profile-form-label" for="username">Username</label>
                        <input type="text" id="username" class="profile-form-input">
                    </div>
                    <div class="profile-form-group">
                        <label class="profile-form-label" for="phone">Phone Number</label>
                        <input type="tel" id="phone" class="profile-form-input">
                    </div>
                    <button type="submit" class="save-button">Save Changes</button>
                    <p class="success-message">Your profile has been updated successfully!</p>
                    <p class="error-message">There was an error updating your profile. Please try again.</p>
                </form>
            </div>

            <!-- Favorites Section -->
            <div class="content-section" id="favorites">
                <h3 class="section-title">Favorite Tracks</h3>
                <div class="favorites-list" id="favorites-container">
                    <!-- Favorites will be loaded dynamically -->
                    <div class="no-favorites">
                        <p>You haven't added any favorites yet. Start by liking songs while listening!</p>
                    </div>
                </div>
            </div>

            <!-- Preferences Section -->
            <div class="content-section" id="preferences">
                <h3 class="section-title">Preferences</h3>
                <div class="profile-form-group">
                    <label class="profile-form-label">Theme</label>
                    <div class="form-row">
                        <div style="display: flex; gap: 10px;">
                            <button class="save-button" style="margin-top: 0;" id="light-theme">Light</button>
                            <button class="save-button" style="margin-top: 0; background: #333;" id="dark-theme">Dark</button>
                        </div>
                    </div>
                </div>
                <div class="profile-form-group">
                    <label class="profile-form-label" for="quality">Audio Quality</label>
                    <select id="quality" class="profile-form-input">
                        <option value="auto">Auto (Recommended)</option>
                        <option value="high">High</option>
                        <option value="medium">Medium</option>
                        <option value="low">Low (Data Saver)</option>
                    </select>
                </div>
                <button class="save-button" id="save-preferences">Save Preferences</button>
            </div>
        </section>
    </main>

    <%- include('partials/player.ejs') %>

    <script src="/scripts/utility/loading.js"></script>
    <script src="/scripts/utility/themeUtils.js"></script>
    <script src="/scripts/utility/profileUtils.js"></script>
    <script src="/scripts/handlers/profileHandler.js"></script>
    <script type="module" src="/scripts/handlers/playerHandler.js" defer></script>
    <script src="/socket.io/socket.io.js"></script>
    
    <!-- Direct fix for profile picture upload -->
    <script>
        // Socket setup for page refresh on profile updates
        // Initialize socket with reconnection options
        const socket = io({
            reconnection: true,          // Enable reconnection
            reconnectionAttempts: 5,     // Try to reconnect 5 times
            reconnectionDelay: 1000,     // How long to initially wait before reconnecting (1 second)
            reconnectionDelayMax: 5000,  // Maximum reconnection delay (5 seconds)
        });
        
        // Listen for reconnect events
        socket.on('reconnect', (attemptNumber) => {
            console.log(`Reconnected after ${attemptNumber} attempts`);
        });
        
        socket.on('reconnect_error', (error) => {
            console.error('Reconnect error:', error);
        });
        
        socket.on('reconnect_failed', () => {
            console.error('Failed to reconnect to server');
        });
        
        // Listen for the refresh signal from server
        socket.on("refresh", () => {
            console.log("Received refresh signal from server");
            location.reload();
        });
        
        document.addEventListener('DOMContentLoaded', function() {
            // Get elements
            const photoUpload = document.getElementById('photo-upload');
            const profileAvatar = document.getElementById('profile-avatar');
            const logoutBtn = document.getElementById('logout-btn');
            
            // Add event listener to photo upload
            if (photoUpload) {
                photoUpload.addEventListener('change', async function(event) {
                    const file = event.target.files[0];
                    if (!file) return;
                    
                    const fileType = file.type;
                    const validImageTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];
                    
                    if (!validImageTypes.includes(fileType)) {
                        alert('Please select a valid image file (JPEG, PNG, WEBP, GIF)');
                        return;
                    }
                    
                    // Show loading state
                    profileAvatar.style.opacity = '0.5';
                    
                    try {
                        const formData = new FormData();
                        formData.append('profilePicture', file);
                        
                        const response = await fetch('/api/user/profile-picture', {
                            method: 'POST',
                            body: formData,
                            // Don't set Content-Type header when using FormData
                            // The browser will automatically set it with the correct boundary
                        });
                        
                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.message || 'Failed to upload profile picture');
                        }
                        
                        const data = await response.json();
                        console.log('Upload response:', data);
                        
                        // Update profile picture with the returned URL
                        if (data && data.profilePicture) {
                            // No need for complex client-side updates anymore
                            // The server will emit a refresh signal to all clients
                            
                            // Create a small preview to show successful upload
                            const successMessage = document.createElement('div');
                            successMessage.style.position = 'fixed';
                            successMessage.style.top = '20px';
                            successMessage.style.left = '50%';
                            successMessage.style.transform = 'translateX(-50%)';
                            successMessage.style.backgroundColor = '#4CAF50';
                            successMessage.style.color = 'white';
                            successMessage.style.padding = '15px 20px';
                            successMessage.style.borderRadius = '5px';
                            successMessage.style.zIndex = '9999';
                            successMessage.textContent = 'Profile picture updated successfully!';
                            document.body.appendChild(successMessage);
                            
                            // Remove the success message after 3 seconds
                            setTimeout(() => {
                                successMessage.style.opacity = '0';
                                successMessage.style.transition = 'opacity 0.5s';
                                setTimeout(() => {
                                    document.body.removeChild(successMessage);
                                }, 500);
                            }, 2000);
                        }
                        
                    } catch (error) {
                        console.error('Error uploading profile picture:', error);
                        alert('There was an error uploading your profile picture. Please try again.');
                    } finally {
                        // Always restore opacity
                        profileAvatar.style.opacity = '1';
                    }
                });
            }
            
            // Add logout functionality
            if (logoutBtn) {
                logoutBtn.addEventListener('click', async function() {
                    try {
                        const response = await fetch('/api/logout', {
                            method: 'POST'
                        });
                        
                        if (response.ok) {
                            window.location.href = '/login';
                        } else {
                            alert('Failed to logout. Please try again.');
                        }
                    } catch (error) {
                        console.error('Error during logout:', error);
                        alert('An error occurred during logout. Please try again.');
                    }
                });
            }
        });
    </script>
</body>

</html>