<footer class="player">
    <% if (song) { %>
        <div class="player-albuminfo">
            <div class="player-songcover">
                <img src="<%= song.albumCover %>" alt="<%= song.albumCover %>" width="75px" height="75px"
                    style="border-radius: 10px">
            </div>

            <div class="player-songdetails font-inter" style="font-weight: 500;">
                <div class="player-songname">
                    <%= song.title %>
                </div>
                <div class="player-artistname">
                    <%= song.artist %>
                </div>
            </div>

            <div class="like-btn" data-song-id="<%= song.id %>">
                <i class="fas fa-heart" style="font-size: larger;">
                    <label>
                        <input type="checkbox" class="like-check" />
                    </label>
                </i>
            </div>
        </div>

        <div class="playback">
            <audio id="songPlayer" data-song-id="<%= song.id %>">
                <source src="<%= song.file %>" type="audio/mpeg">
            </audio>
            <div class="music-progress-bar">
                <span class="player-current-time">0:00</span>
                <label for="seekMusic" id="seekMusicLabel" class="seekbar-label">.</label>
                <input type="range" id="seekMusic" class="seekbar" min="0" max="100" value="0" step="0.01">
                <span class="player-duration"><%= song.duration || "0:00" %></span>
            </div>

            <div class="controls">
                <i class="fas fa-random shuffle"></i> <!-- Shuffle -->
                <i class="fas fa-step-backward reverse"></i> <!-- Reverse -->
                <i class="fas fa-play play" style="display: none; padding-right: 4px;"></i> <!-- Play -->
                <i class="fas fa-pause pause" style="display: block; padding: 0 7px;"></i> <!-- Pause -->
                <i class="fas fa-step-forward forward"></i> <!-- Forward -->
                <i class="fa-solid fa-repeat repeat">
                    <p style="
                        display: none;
                        color: var(--white);
                        position: absolute;
                        left: 811px;
                        bottom: 24px;
                        font-size: 12px;
                        font-weight: bold;
                        font-family: 'Segoe UI',serif;
                        cursor: pointer;
                    ">1
                    </p>
                </i> <!-- Repeat -->
            </div>
        </div>

        <div class="other-controls">
            <div class="song-queue"> <!-- Song Queue (formerly burger-menu) -->
                <i class="fas fa-list"></i>
            </div>
            <div class="volume">
                <i class="fas fa-volume-mute" id="volume-mute" style="display: none;"></i>
                <i class="fas fa-volume-down" id="volume-one" style="display: none;"></i>
                <i class="fas fa-volume" id="volume-two" style="display: none; filter: invert(1)">
                    <img src="/assets/home/volume.png" alt="" width="20px">
                </i>
                <i class="fas fa-volume-up" id="volume-three" style="display: block;"></i>
                <div class="volume-control-bar">
                    <label for="seekVolume" id="seekVolumeLabel" class="seekbar-label">.</label>
                    <input type="range" id="seekVolume" min="0" max="100" value="50" step="1">
                </div>
            </div>
        </div>
        <% } else { %>
            <p>No song data available to render the player.</p>
            <% } %>
</footer>

<script>
    // Initialize socket connection if available
    if (typeof io !== 'undefined') {
        const socket = io();
        
        // Make socket available globally so other scripts can access it
        window.socket = socket;
        
        // Listen for favorites refresh events
        socket.on('refresh-favorites', (songId) => {
            console.log('Received refresh-favorites event for song ID:', songId);
            
            // Get the current song ID from the audio element
            const audioElement = document.getElementById('songPlayer');
            if (audioElement) {
                const currentSongId = audioElement.getAttribute('data-song-id');
                
                // If the updated song is the current song, update the like button
                if (currentSongId === songId.toString()) {
                    // Trigger an update on the like button state
                    if (typeof updateLikeButtonState === 'function') {
                        updateLikeButtonState(currentSongId);
                    }
                }
            }
        });
        
        // Also listen for general refresh events (like profile picture updates)
        socket.on('refresh', () => {
            // Handle profile picture updates without full page refresh
            // This could update specific elements based on what changed
            console.log('Received general refresh event');
            
            // You can add specific DOM updates here if needed
            // For example, refresh the profile picture if it's visible
            const profilePic = document.querySelector('.profile-picture img');
            if (profilePic) {
                // Add a cache-busting parameter to force a refresh
                const currentSrc = profilePic.src.split('?')[0];
                profilePic.src = `${currentSrc}?t=${new Date().getTime()}`;
            }
        });
    }
</script>